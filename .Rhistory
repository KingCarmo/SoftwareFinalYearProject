html_text()
NorwichYC13 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[19]/div/div/div[2]/div/div[4]') %>%
html_text()
NorwichRC13 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[19]/div/div/div[2]/div/div[5]') %>%
html_text()
NorwichMP13 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[19]/div/div/div[2]/div/div[6]') %>%
html_text()
NorwichGoal13 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichGoal13))
NorwichAssist13 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichAssist13))
NorwichYC13 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichYC13))
NorwichRC13 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichRC13))
NorwichMP13 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichMP13))
#LOUIS THOMPSON
NorwichGoal14 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[20]/div/div/div[2]/div/div[1]') %>%
html_text()
NorwichAssist14 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[20]/div/div/div[2]/div/div[2]') %>%
html_text()
NorwichYC14 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[20]/div/div/div[2]/div/div[4]') %>%
html_text()
NorwichRC14 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[20]/div/div/div[2]/div/div[5]') %>%
html_text()
NorwichMP14 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[20]/div/div/div[2]/div/div[6]') %>%
html_text()
NorwichGoal14 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichGoal14))
NorwichAssist14 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichAssist14))
NorwichYC14 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichYC14))
NorwichRC14 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichRC14))
NorwichMP14 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichMP14))
#MARIO VRANCIC
NorwichGoal15 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[23]/div/div/div[2]/div/div[1]') %>%
html_text()
NorwichAssist15 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[23]/div/div/div[2]/div/div[2]') %>%
html_text()
NorwichYC15 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[23]/div/div/div[2]/div/div[4]') %>%
html_text()
NorwichRC15 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[23]/div/div/div[2]/div/div[5]') %>%
html_text()
NorwichMP15 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[23]/div/div/div[2]/div/div[6]') %>%
html_text()
NorwichGoal15 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichGoal15))
NorwichAssist15 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichAssist15))
NorwichYC15 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichYC15))
NorwichRC15 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichRC15))
NorwichMP15 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichMP15))
#ONEL HERNANDEZ
NorwichGoal16 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[29]/div/div/div[2]/div/div[1]') %>%
html_text()
NorwichAssist16 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[29]/div/div/div[2]/div/div[2]') %>%
html_text()
NorwichYC16 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[29]/div/div/div[2]/div/div[4]') %>%
html_text()
NorwichRC16 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[29]/div/div/div[2]/div/div[5]') %>%
html_text()
NorwichMP16 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[29]/div/div/div[2]/div/div[6]') %>%
html_text()
NorwichGoal16 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichGoal16))
NorwichAssist16 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichAssist16))
NorwichYC16 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichYC16))
NorwichRC16 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichRC16))
NorwichMP16 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichMP16))
#TEEMU PUKKI
NorwichGoal17 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[31]/div/div/div[2]/div/div[1]') %>%
html_text()
NorwichAssist17 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[31]/div/div/div[2]/div/div[2]') %>%
html_text()
NorwichYC17 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[31]/div/div/div[2]/div/div[4]') %>%
html_text()
NorwichRC17 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[31]/div/div/div[2]/div/div[5]') %>%
html_text()
NorwichMP17 <- fctables_wbpg %>%
html_nodes(".player_box") %>%
html_nodes(xpath = '//*[@id="team-players"]/div/div[2]/div[31]/div/div/div[2]/div/div[6]') %>%
html_text()
NorwichGoal17 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichGoal17))
NorwichAssist17 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichAssist17))
NorwichYC17 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichYC17))
NorwichRC17 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichRC17))
NorwichMP17 <-as.numeric(gsub("([0-9]+).*$", "\\1", NorwichMP17))
########## Remove Certain Rows From Norwich Dataset #############
Norwich <- data.frame(PlayerNames)
View(Norwich)
Norwich <- Norwich[-c(15, 17, 18, 19, 22, 23, 24, 25), ]
Norwich <- as.character(Norwich)
Norwich <- data.frame(Norwich)
############ Creating Datasets for All Data ###############
NorwichAssists <- c(NorwichAssist1, NorwichAssist2, NorwichAssist3, NorwichAssist4, NorwichAssist5, NorwichAssist6, NorwichAssist7, NorwichAssist8, NorwichAssist9, NorwichAssist10, NorwichAssist11, NorwichAssist12, NorwichAssist13, NorwichAssist14, NorwichAssist15, NorwichAssist16, NorwichAssist17)
Norwich$Assists <- data.frame(NorwichAssists)
NorwichGoals <- c(NorwichGoal1, NorwichGoal2, NorwichGoal3, NorwichGoal4, NorwichGoal5, NorwichGoal6, NorwichGoal7, NorwichGoal8, NorwichGoal9, NorwichGoal10, NorwichGoal11, NorwichGoal12, NorwichGoal13, NorwichGoal14, NorwichGoal15, NorwichGoal16, NorwichGoal17)
Norwich$Goals <- data.frame(NorwichGoals)
NorwichYC <- c(NorwichYC1, NorwichYC2, NorwichYC3, NorwichYC4, NorwichYC5, NorwichYC6, NorwichYC7, NorwichYC8, NorwichYC9, NorwichYC10, NorwichYC11, NorwichYC12, NorwichYC13, NorwichYC14, NorwichYC15, NorwichYC16, NorwichYC17)
Norwich$YellowCards <- data.frame(NorwichYC)
NorwichRC <- c(NorwichRC1, NorwichRC2, NorwichRC3, NorwichRC4, NorwichRC5, NorwichRC6, NorwichRC7, NorwichRC8, NorwichRC9, NorwichRC10, NorwichRC11, NorwichRC12, NorwichRC13, NorwichRC14, NorwichRC15, NorwichRC16, NorwichRC17)
Norwich$RedCards <- data.frame(NorwichRC)
NorwichMP <- c(NorwichMP1, NorwichMP2, NorwichMP3, NorwichMP4, NorwichMP5, NorwichMP6, NorwichMP7, NorwichMP8, NorwichMP9, NorwichMP10, NorwichMP11, NorwichMP12, NorwichMP13, NorwichMP14, NorwichMP15, NorwichMP16, NorwichMP17)
Norwich$PlayedGames <- data.frame(NorwichMP)
######################### Prediction Values - Norwich #######################
library(rvest)
library(stringr)
library("tm", lib.loc="~/R/win-library/3.5")
Norwichtransfermarkt_wbpg <- read_html("NorwichTM.html")
#players names
PlayerName <- Norwichtransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes(".posrela") %>%
html_nodes(".hide-for-small") %>%
html_nodes(".spielprofil_tooltip") %>%
html_text()
#Players Current Value
PlayerCurrentValue <- Norwichtransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes("td.hauptlink:nth-child(10)") %>%
html_text()
#Previous Current Value
NorwichPreviousValueTM <- Norwichtransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes("td.rechts") %>%
html_nodes(".icons_sprite")
NorwichPreviousValueTM2 <- html_attr(NorwichPreviousValueTM, "title")
PreviousValue <- gsub("[^0-9.]","",NorwichPreviousValueTM2)
CurrentValue <- gsub("[^0-9.]","",PlayerCurrentValue)
#names(mydf) <- gsub("\\.", "", names(mydf))
#Age
NorwichAge <- Norwichtransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes("td.zentriert:nth-child(3)") %>%
html_text()
#Nationality
PlayerCountry <- Norwichtransfermarkt_wbpg %>%
html_nodes(".ausfall-1-table , #yw1 .flaggenrahmen:nth-child(1)")
NorwichclubCountryTM <- html_attr(PlayerCountry, "alt")
is.na(NorwichclubCountryTM)
NorwichclubCountryTM <- na.omit(NorwichclubCountryTM)
rownames(NorwichclubCountryTM)<-NULL
Value2017 <- c(
"3600000",
"450000",
"90000",
"4950000",
"4050000",
"225000",
"225000",
"765000",
"150000",
"360000",
"2250000",
"180000",
"450000",
"225000",
"1130000",
"1260000",
"540000",
"68000",
"900000",
"720000",
"450000",
"7200000",
"1800000",
"360000"
)
Value2017 <- as.numeric(Value2017)
Value2016 <- c(
7200000,
450000,
90000,
3600000,
2250000,
158000,
0,
675000,
0,
3600000,
2700000,
2700000,
450000,
450000,
900000,
1350000,
540000,
0,
855000,
135000,
450000,
9000000,
1580000,
116000
)
Value2015 <- c(
7200000,
450000,
90000,
3600000,
2250000,
158000,
0,
540000,
0,
3600000,
450000,
3150000,
540000,
450000,
1800000,
3150000,
585000,
0,
500000,
90000,
450000,
9000000,
1800000,
68000
)
Value2019 <- as.double(CurrentValue, digits=2)
Value2019 <- as.data.frame(Value2019)
Value2018 <- as.double(PreviousValue, digits=2)
Value2018 <- as.double(Value2018)
NorwichCity <- data.frame(PlayerName, NorwichclubCountryTM, NorwichAge, Value2017, Value2016, Value2015)
NorwichCity <- cbind(NorwichCity, Value2019, Value2018)
for (i in 1:nrow(NorwichCity)) {
if(NorwichCity[i , "Value2019"] < 25)
NorwichCity$Value2019[i] <- NorwichCity[i , "Value2019"]*1000000
else
NorwichCity$Value2019[i] <- NorwichCity[i , "Value2019"]*1000
}
for (i in 1:nrow(NorwichCity)) {
if(NorwichCity[i , "Value2018"] < 25)
NorwichCity$Value2018[i] <- NorwichCity[i , "Value2018"]*1000000
else
NorwichCity$Value2018[i] <- NorwichCity[i , "Value2018"]*1000
}
##################### Linear Regression ############################
#install.packages("ISLR")
library(ISLR)
NorwichCity <- NorwichCity
?Norwich
str(NorwichCity)
# check for missing data
sapply(NorwichCity, FUN=function(x) {sum(is.na(x))})
# Model Evaluation
# Going with our holdout set
# pick 75% of row indexes (i.e. row numbers)
index <- sample(1:nrow(NorwichCity), nrow(NorwichCity)*.75, replace=FALSE)
#those chosen, put in the training data frame
training <- NorwichCity[index, ]
#those not chosen, put in the testing data frame
testing <- NorwichCity[-index, ]
getPerformanceData <- function(model, testingNorwichCity)
{
# instrument the predictions
yHat <- predict(model, newdata=testingNorwichCity)
# calculate the measures of test performance
MAE <- mean(abs(testing$Value2019 - yHat), na.rm = TRUE)
MSE <- mean((testing$Value2019 - yHat)^2, na.rm = TRUE)
RMSE <- sqrt(MSE)
MAPE <- mean(abs((testing$Value2019 - yHat)/ testing$Value2019), na.rm = TRUE)
return(data.frame(MAE, MSE, RMSE, MAPE))
}
# Multiple Linear Regression
# Y = beta_0 + beta_1 x1 + ... + beta_n xn + err
# balance = beta_0 + beta_1 x limit + beta_2 x income + err
#fit <- lm(testing$`2019 Value` ~ testing$`2018 Value` + testing$`2017 Value` + testing$`2016 Value`, data = Norwich)
#getPerformanceData(fit, testing)
LIRmodel <- lm(Value2019 ~ Value2018 + Value2017 + Value2016 + Value2015 , data=testing)
getPerformanceData(LIRmodel, testing)
summary(LIRmodel)
testing$Predicted<- predict(LIRmodel)
##### Removing Rows ####
Norwich <- Norwich[-c( 2, 3), ]
rownames(Norwich)<-NULL
NorwichCity <- NorwichCity[-c(1, 2, 4, 8, 9, 13, 16, 18, 19), ]
#### Fixing Columns ####
Norwich <- Norwich[order(Norwich$Norwich),]
NorwichCity <- NorwichCity[order(NorwichCity$PlayerName),]
#### Binding Both Values and Football Data + More Fixes ####
NorwichCityFC <- cbind(Norwich, NorwichCity)
NorwichCityFC <- NorwichCityFC[ -c(1) ]
NorwichCityFC <- NorwichCityFC[c(6,1,2,3,4,5,7,8,9,10,11,12,13)]
str(StokeCity)
# check for missing data
sapply(StokeCity, FUN=function(x) {sum(is.na(x))})
# Going with our holdout set
# pick 75% of row indexes (i.e. row numbers)
index <- sample(1:nrow(StokeCity), nrow(StokeCity)*.75, replace=FALSE)
#those chosen, put in the training data frame
training <- StokeCity[index, ]
#those not chosen, put in the testing data frame
testing <- StokeCity[-index, ]
getPerformanceData <- function(model, testingStokeCity)
{
# instrument the predictions
yHat <- predict(model, newdata=testingStokeCity)
# calculate the measures of test performance
MAE <- mean(abs(testing$Value2019 - yHat), na.rm = TRUE)
MSE <- mean((testing$Value2019 - yHat)^2, na.rm = TRUE)
RMSE <- sqrt(MSE)
MAPE <- mean(abs((testing$Value2019 - yHat)/ testing$Value2019), na.rm = TRUE)
return(data.frame(MAE, MSE, RMSE, MAPE))
}
LIRmodel <- lm(Value2019 ~ Value2018 + Value2017 + Value2016 + Value2015 , data=testing)
getPerformanceData(LIRmodel, testing)
summary(LIRmodel)
testing$Predicted<- predict(LIRmodel)
library(rvest)
library(stringr)
library("tm", lib.loc="~/R/win-library/3.5")
Stoketransfermarkt_wbpg <- read_html("StokeTM.html")
#players names
PlayerName <- Stoketransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes(".posrela") %>%
html_nodes(".hide-for-small") %>%
html_nodes(".spielprofil_tooltip") %>%
html_text()
#Players Current Value
PlayerCurrentValue <- Stoketransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes("td.hauptlink:nth-child(10)") %>%
html_text()
#Previous Current Value
StokePreviousValueTM <- Stoketransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes("td.rechts") %>%
html_nodes(".icons_sprite")
#Age
StokeAge <- Stoketransfermarkt_wbpg %>%
html_nodes(".responsive-table") %>%
html_nodes("td.zentriert:nth-child(3)") %>%
html_text()
#Nationality
PlayerCountry <- Stoketransfermarkt_wbpg %>%
html_nodes(".ausfall-1-table , #yw1 .flaggenrahmen:nth-child(1)")
StokeclubCountryTM <- html_attr(PlayerCountry, "alt")
is.na(StokeclubCountryTM)
StokeclubCountryTM <- na.omit(StokeclubCountryTM)
rownames(StokeclubCountryTM)<-NULL
StokePreviousValueTM2 <- html_attr(StokePreviousValueTM, "title")
PreviousValue <- gsub("[^0-9.]","",StokePreviousValueTM2)
CurrentValue <- gsub("[^0-9.]","",PlayerCurrentValue)
Value2017 <- c(
"13500000",
"900000",
"675000",
"9000000",
"9900000",
"7200000",
"900000",
"900000",
"2070000",
"450000",
"1350000",
"13500000",
"900000",
"3150000",
"1800000",
"2250000",
"2700000",
"6300000",
"7200000",
"9000000",
"13500000",
"3600000",
"6300000"
)
Value2017 <- as.numeric(Value2017)
Value2016 <- c(
"8100000",
"900000",
"900000",
"9000000",
"8100000",
"7200000",
"900000",
"450000",
"1800000",
"0",
"1350000",
"10800000",
"135000",
"4050000",
"1800000",
"2250000",
"2700000",
"9000000",
"900000",
"8100000",
"13500000",
"3150000",
"7200000"
)
Value2016 <- as.numeric(Value2016)
Value2015 <- c(
"3150000",
"900000",
"675000",
"10350000",
"8100000",
"5850000",
"900000",
"0",
"1800000",
"0",
"450000",
"9000000",
"135000",
"3600000",
"1800000",
"1350000",
"2700000",
"5850000",
"6300000",
"6300000",
"13500000",
"2250000",
"8100000"
)
Value2015 <- as.numeric(Value2015)
Value2019 <- as.double(CurrentValue, digits=2)
Value2019 <- as.data.frame(Value2019)
Value2018 <- as.double(PreviousValue, digits=2)
Value2018 <- as.double(Value2018)
StokeCity <- data.frame(PlayerName, StokeclubCountryTM, StokeAge, Value2017, Value2016, Value2015)
StokeCity <- cbind(StokeCity, Value2019, Value2018)
for (i in 1:nrow(StokeCity)) {
if(StokeCity[i , "Value2019"] < 25)
StokeCity$Value2019[i] <- StokeCity[i , "Value2019"]*1000000
else
StokeCity$Value2019[i] <- StokeCity[i , "Value2019"]*1000
}
for (i in 1:nrow(StokeCity)) {
if(StokeCity[i , "Value2018"] < 25)
StokeCity$Value2018[i] <- StokeCity[i , "Value2018"]*1000000
else
StokeCity$Value2018[i] <- StokeCity[i , "Value2018"]*1000
}
#install.packages("ISLR")
library(ISLR)
StokeCity <- StokeCity
?StokeCity
str(StokeCity)
# check for missing data
sapply(StokeCity, FUN=function(x) {sum(is.na(x))})
# Going with our holdout set
# pick 75% of row indexes (i.e. row numbers)
index <- sample(1:nrow(StokeCity), nrow(StokeCity)*.75, replace=FALSE)
#those chosen, put in the training data frame
training <- StokeCity[index, ]
#those not chosen, put in the testing data frame
testing <- StokeCity[-index, ]
getPerformanceData <- function(model, testingStokeCity)
{
# instrument the predictions
yHat <- predict(model, newdata=testingStokeCity)
# calculate the measures of test performance
MAE <- mean(abs(testing$Value2019 - yHat), na.rm = TRUE)
MSE <- mean((testing$Value2019 - yHat)^2, na.rm = TRUE)
RMSE <- sqrt(MSE)
MAPE <- mean(abs((testing$Value2019 - yHat)/ testing$Value2019), na.rm = TRUE)
return(data.frame(MAE, MSE, RMSE, MAPE))
}
LIRmodel <- lm(Value2019 ~ Value2018 + Value2017 + Value2016 + Value2015 , data=testing)
getPerformanceData(LIRmodel, testing)
summary(LIRmodel)
testing$Predicted<- predict(LIRmodel)
View(testing)
LIRmodel <- lm(Value2019 ~ Value2018 + Value2017 + Value2016 + Value2015 , data=testing)
getPerformanceData(LIRmodel, testing)
summary(LIRmodel)
predict(LIRmodel)
